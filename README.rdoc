= Theine

Theine is a Rails application pre-loader designed to work on JRuby.
It is similar to Zeus, Spring and Spork. The problem with Zeus and Spring is
that they use `fork` which doesn't work on JRuby.

== Installing

  gem install theine

You don't need to add it to your project's Gemfile.

You need to have pry in your project's Gemfile:
  gem 'pry'

This is because Theine can only work with Pry for rails console at the moment.

== Speed up theine even more (recommended)

If you are using RVM or rbenv, you can tell theine to use Ruby 1.9 or Ruby 2.0
to run the client (theine executable). Because Ruby MRI starts up much faster
than JRuby, you will speed theine up for about one more second.

Figure out where the binary for the other Ruby is:

  $ rvm use ruby-2.0.0
  Using /Users/mrbrdo/.rvm/gems/ruby-2.0.0-p247
  $ which ruby
  /Users/mrbrdo/.rvm/rubies/ruby-2.0.0-p247/bin/ruby

Then go back to JRuby where you have theine installed and tell theine to use it:

  $ theine_set_ruby /Users/mrbrdo/.rvm/rubies/ruby-2.0.0-p247/bin/ruby

Enjoy faster times:

  time theine runner "puts 'hello world'"
  0.12s user 0.02s system 30% cpu 0.470 total

== Using

Start up the theine server in the root of your Rails project:

  bundle exec theine_server

Then run any rails command using theine (don't use bundle exec):

  theine runner "puts 'Hello world'"
  theine server
  theine console

== How it works

Theine's server spawns processes in the background that load your Rails
application. When you run a command through theine, it will be executed in
one of these pre-loaded processes. After your command is done, the process
will exit. When you run a new command, it will run in another pre-loaded process.

Theine will automatically spawn additional processes as needed.
